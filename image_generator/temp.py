rom sympy.interactive import printing
printing.init_printing(use_latex=True)

from sympy import Piecewise, log, ITE, piecewise_fold
from sympy.abc import x, y


data.coeff = [[1.300000000000000e+00,   2.400000000000000e+00,  -4.376613469563005e-01,  -3.816755328506080e-01],[2.500000000000000e+00,   1.462596808173783e+00,  -1.124677306087394e+00,   3.183107859179693e-01],[3.200000000000000e+00,   1.522714969506621e-01,   1.167347589926864e-01,  -1.690062559433489e-01],[3.300000000000000e+00,  -1.212777528940115e-01,  -3.902840088373601e-01,   7.847543785778182e-03],[2.500000000000000e+00,  -1.096229128877253e+00,  -3.596785880728252e-01,   2.093312489617370e-01],[1.500000000000000e+00,  -1.269798871787239e+00,   1.427164094353430e-01,   2.522043877295965e+00],[1.200000000000000e+00,  -5.032171792561192e-01,   2.412555899001717e+00,  -1.234212111513640e+00],[1.500000000000000e+00,   1.058900819111210e+00,   1.909740982771655e-01,   1.824485270008311e-01],[2.100000000000000e+00,   1.386711312638998e+00,   4.646468887784123e-01,  -2.513582014174105e-01],[3.700000000000000e+00,   1.561930485943591e+00,  -2.894277154738192e-01,   2.749722953022754e-02],[5.000000000000000e+00,   1.065566743586636e+00,  -2.069360268831366e-01,   4.136928329650134e-02],[5.900000000000000e+00,   7.758025397098663e-01,  -8.282817699363258e-02,  -2.291567743085240e-02],[6.800000000000000e+00,   3.726371860707150e-01,  -1.859487254324684e-01,   4.723817870132774e-02],[7.100000000000000e+00,   1.336487160072722e-01,   2.662307872350647e-02,  -6.027179473077810e-02],[7.200000000000000e+00,   6.079489261950830e-03,  -1.541923054688278e-01,   4.811281620687648e-02],[7.100000000000000e+00,  -1.579666730550754e-01,  -9.853856848198398e-03,  -3.217947009672548e-02],[6.900000000000000e+00,  -2.742127970416487e-01,  -1.063922671383748e-01,  -1.939493581997687e-02],[6.500000000000000e+00,  -5.451821387783289e-01,  -1.645770745983055e-01,   6.084071993734934e-03],[4.800000000000000e+00,  -1.130481573246732e+00,  -1.280726426358959e-01,  -3.414207564133759e-02],[3.200000000000000e+00,  -1.585349682343460e+00,  -2.509841149447112e-01,   2.208091676390805e-01],[1.200000000000000e+00,  -1.118405901269571e+00,   6.101716388477025e-01,   5.328032738288072e-02],[8.000000000000000e-01,  -4.682740168847082e-01,   6.900921299220236e-01,  -3.070881923052153e-01],[7.000000000000000e-01,  -8.498031191596006e-03,   2.294598414642006e-01,   3.750724418379834e-01],[8.000000000000000e-01,   5.022661416510923e-01,   7.920685042211758e-01,  -3.932015750467214e-01],[1.200000000000000e+00,   9.994334645872270e-01,   2.022661416510937e-01,  -1.202266141651094e+00],[1.600000000000000e+00,   0.000000000000000e+00,   0.000000000000000e+00,   0.000000000000000e+00]]

count = data.x[0]
funs = []
conds = []
for i in range(0,25):
  limit = data.x[i+1]
  while count <= limit:
    fun = (data.coeff[i,3]*(x-data.x[i])**3)+(data.coeff[i,2]*(x-data.x[i])**2)+(data.coeff[i,1]*(x-data.x[i]))+(data.coeff[i,0])
    funs.append(fun)
    cond = data.x[i] < x
    conds.append(cond)
    cond = x > data.x[i+1]
    conds.append(cond)
    count+=1
  

pieces = []
for i in range(0,24):
  piece = (funs[i],conds[2*i])
  pieces.append(piece)
  piece = (funs[i],conds[2*i+1])
  pieces.append(piece)


display(Piecewise(*pieces))